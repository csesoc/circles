{
  "COMP1511": {
      "name": "Programming Fundamentals",
      "overview": "An introduction to problem-solving via programming, which aims to have students develop proficiency in using a high level programming language. Topics: algorithms, program structures (statements, sequence, selection, iteration, functions), data types (numeric, character), data structures (arrays, tuples, pointers, lists), storage structures (memory, addresses), introduction to analysis of algorithms, testing, code quality, teamwork, and reflective practice. The course includes extensive practical work in labs and programming projects.",
      "terms": ["t0", "t1", "t2", "t3"],
      "UOC": 6,
      "campus": "Kensington",
      "status": "planned",
      "prereq": [],
      "next": ["COMP1521", "COMP1531", "COMP2511", "COMP2521"],
      "type": "core",
      "level": "Undergraduate",
      "faculty": "Faculty of Engineering",
      "school": "School of Computer Science and Engineering" 
  },
  "COMP1521": {
      "name": "Computer Systems Fundamentals",
      "overview": "This course provides a programmer's view on how a computer system executes programs, manipulates data and communicates. It enables students to become effective programmers in dealing with issues of performance, portability, and robustness. It is typically taken in the term after completing COMP1511, but could be delayed and taken later. It serves as a foundation for later courses on networks, operating systems, computer architecture and compilers, where a deeper understanding of systems-level issues is required.",
      "terms": ["t2", "t3"],
      "UOC": 6,
      "campus": "Kensington",
      "status": "planned",
      "prereq": ["COMP1511", "DPST1091", "COMP1911", "COMP1917"],
      "next": ["COMP3231"],
      "type": "core",
      "level": "Undergraduate",
      "faculty": "Faculty of Engineering",
      "school": "School of Computer Science and Engineering" 
  },
  "COMP2521": {
      "name": "Data Structures and Algorithms",
      "overview": "The goal of this course is to deepen students' understanding of data structures and algorithms and how these can be employed effectively in the design of software systems. We anticipate that it will generally be taken in the second year of a program, but since its only pre-requisite is COMP1511, is it possible to take it in first year. It is an important course in covering a range of core data structures and algorithms that will be used in context in later courses.",
      "terms": ["t1", "t2", "t3"],
      "UOC": 6,
      "campus": "Kensington",
      "status": "unplanned",
      "prereq": ["COMP1511", "DPST1091", "COMP1921", "COMP1917"],
      "next": ["COMP3121"],
      "type": "core",
      "level": "Undergraduate",
      "faculty": "Faculty of Engineering",
      "school": "School of Computer Science and Engineering" 
  },
  "COMP6441": {
      "name": "Security Engineering and Cyber Security",
      "overview": "Introduction to computer security, cybercrime, and cyberterror. The principles of engineering secure systems. How to think like a security engineer. Engineering secure systems. How security fails. Security analysis and design. Private and public cryptographic protocols. Introduction to information security: Confidentiality, Integrity, Authentication, Non-repudiation, hashing, signatures, bits of security. Physical security, social engineering, sniffing, intrusion detection, prevention and response, firewalls, honeypots. Overview of vulnerabilities and exploits including areas such as buffer overflow, inter overflow, heap attacks, Return-Oriented-Programming, heap attacks. Principles of risk and security. Case studies drawn from the history of hacking and from current events.",
      "terms": ["t1"],
      "UOC": 6,
      "campus": "Kensington",
      "status": "unplanned",
      "prereq": ["COMP2521"],
      "next": [],
      "type": "elective",
      "level": "Postgraduate",
      "faculty": "Faculty of Engineering",
      "school": "School of Computer Science and Engineering" 
  },
  "DDES1140": {
      "name": "Graphics 1: Image and Type",
      "overview": "This course offers you an introductory opportunity to develop critical skills in the creation of graphic images through photography and various types of illustration. You will then begin to understand how to manipulate typography within formal grids and structures, and as an expressive medium. Graphic design is built on a sound understanding of the relationship between image and type.",
      "terms": ["t0", "t1", "t2", "t3"],
      "UOC": 6,
      "campus": "Paddington",
      "status": "planned",
      "prereq": [],
      "next": ["DDES2140"],
      "type": "gened",
      "level": "Undergraduate",
      "faculty": "Faculty of Arts, Design, and Architecture",
      "school": "School of Arts & Design" 
  },
  "COMP1531": {
    "name": "Introduction to Software Design",
    "overview": "This course provides an introduction to software engineering principles: basic software lifecycle concepts, modern development methodologies, conceptual modeling and how these activities relate to programming. It also introduces the basic notions of team-based project management via conducting a project to design, build and deploy a simple web-based application. It is typically taken in the term after completing COMP1511, but could be delayed and taken later. It provides essential background for the teamwork and project management required in many later courses.",
    "terms": ["t1", "t3"],
    "UOC": 6,
    "campus": "Kensington",
    "status": "unplanned",
    "prereq": ["COMP1511", "DPST1091", "COMP1921", "COMP1917"],
    "next": ["COMP2511"],
    "type": "core",
    "level": "Undergraduate",
    "faculty": "Faculty of Engineering",
    "school": "School of Computer Science and Engineering" 
  }
}